version: '3'

services:
  pg-db:
    image: postgres:latest
    container_name: pg-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=User@123
      - POSTGRES_DB=library
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - poc-network

  node-mongo-db:
    image: mongo:latest
    container_name: node-mongo-db
    environment:      
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    ports:
      - '27017:27017'
    healthcheck:
      test: ["CMD", "mongosh", "--eval \"db.adminCommand({ping:1})\" --quiet"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - poc-network

  node-server:
    build:
      dockerfile: server.Dockerfile
      context: .
    image: node-server
    container_name: node-server
    environment:
      - NOSQL_DBCONNECTION_STRING=mongodb://root:root@node-mongo-db:27017/
      - NODE_ENV=production
    depends_on:
      pg-db:
        condition: service_healthy
      node-mongo-db:
        condition: service_healthy
    ports:
      - "8080:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 5s
      timeout: 35s
      retries: 8
    networks:
      - poc-network

  ng-client:
    build:
      dockerfile: client.Dockerfile
      context: .
    image: ng-client
    container_name: ng-client
    depends_on:
      node-server:
        condition: service_healthy
    ports:
      - "8081:4000"
    networks:
      - poc-network

networks:
  poc-network:
    driver: bridge
